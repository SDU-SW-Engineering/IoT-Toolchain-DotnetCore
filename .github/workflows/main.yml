# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Setup .NET Core @ Latest
        uses: actions/setup-dotnet@v1
        with:
          source-url: https://nuget.pkg.github.com/SDU-SW-Engineering/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}        
      
      - name: Remove Schemes
        run: |  
          cd Toolchain
          rm -r Schemes
            
      - name: Build solution and generate NuGet package
        run: |  
          cd Toolchain
          dotnet pack -c Release -o out  

      - name: Push generated package to GitHub registry
        #run: dotnet nuget push ./Toolchain/out/*.nupkg --skip-duplicate --no-symbols true
        run: curl -X PUT -u "$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}" -F package=@Toolchain/out/Toolchain.1.0.0.nupkg https://nuget.pkg.github.com/SDU-SW-Engineering/

    #  - name: Publish NuGet
        # You may pin to the exact commit or the version.
        # uses: brandedoutcast/publish-nuget@c12b8546b67672ee38ac87bea491ac94a587f7cc
     #   uses: brandedoutcast/publish-nuget@v2.5.5
      #  with:
          # Filepath of the project to be packaged, relative to root of repository
       #   PROJECT_FILE_PATH: Toolchain/Toolchain.csproj
        #  VERSION_STATIC: 1.0.0
          # NuGet package id, used for version detection & defaults to project name
          #PACKAGE_NAME: IoTKafkaToolchain
          # API key to authenticate with NuGet server
         # NUGET_KEY: ${{ secrets.GITHUB_TOKEN }}
          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          #NUGET_SOURCE: https://nuget.pkg.github.com/SDU-SW-Engineering/index.json
